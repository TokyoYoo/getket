<div class="row justify-content-center">
    <div class="col-md-10 col-lg-8">
        <div class="card shadow">
            <div class="card-header bg-success text-white">
                <h3 class="card-title mb-0">
                    <i class="fas fa-key"></i>
                    Access Key Management
                </h3>
            </div>
            <div class="card-body">
                <% if (typeof error !== 'undefined' && error) { %>
                    <div class="alert alert-danger" role="alert">
                        <i class="fas fa-exclamation-circle"></i>
                        <%= error %>
                    </div>
                <% } %>

                <% if (typeof isNewKey !== 'undefined' && isNewKey) { %>
                    <div class="alert alert-success" role="alert">
                        <i class="fas fa-check-circle"></i>
                        <strong>New access key generated successfully!</strong>
                    </div>
                <% } %>

                <% if (hasKey && key) { %>
                    <!-- Active Key Display -->
                    <div class="alert alert-info mb-4">
                        <i class="fas fa-info-circle"></i>
                        <strong>Congratulations!</strong> You have successfully completed all checkpoints.
                    </div>

                    <div class="key-display mb-4">
                        <h5>Your Access Key:</h5>
                        <div class="input-group mb-3">
                            <input type="text" class="form-control form-control-lg font-monospace" 
                                   id="accessKey" value="<%= key.keyValue %>" readonly>
                            <button class="btn btn-outline-secondary" type="button" 
                                    onclick="copyToClipboard()">
                                <i class="fas fa-copy"></i> Copy
                            </button>
                        </div>
                        <small class="text-muted">
                            Use this key to access the premium features.
                        </small>
                    </div>

                    <!-- Key Information -->
                    <div class="row mb-4">
                        <div class="col-md-6">
                            <div class="card bg-light">
                                <div class="card-body">
                                    <h6 class="card-title">
                                        <i class="fas fa-clock"></i>
                                        Time Remaining
                                    </h6>
                                    <p class="card-text h5 text-primary" id="timeRemaining">
                                        <%= timeRemaining %>
                                    </p>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="card bg-light">
                                <div class="card-body">
                                    <h6 class="card-title">
                                        <i class="fas fa-calendar"></i>
                                        Expires At
                                    </h6>
                                    <p class="card-text">
                                        <%= new Date(key.expiresAt).toLocaleString() %>
                                    </p>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Key Usage Stats -->
                    <div class="card bg-light mb-4">
                        <div class="card-body">
                            <h6 class="card-title">
                                <i class="fas fa-chart-bar"></i>
                                Usage Statistics
                            </h6>
                            <div class="row">
                                <div class="col-sm-4">
                                    <strong>Access Count:</strong>
                                    <span class="badge bg-primary">
                                        <%= key.accessCount || 0 %>
                                    </span>
                                </div>
                                <div class="col-sm-4">
                                    <strong>Status:</strong>
                                    <span class="badge bg-success">Active</span>
                                </div>
                                <div class="col-sm-4">
                                    <strong>Last Used:</strong>
                                    <small class="text-muted">
                                        <%= key.lastAccessed ? new Date(key.lastAccessed).toLocaleString() : 'Never' %>
                                    </small>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Actions -->
                    <div class="d-grid gap-2 d-md-flex justify-content-md-between">
                        <button type="button" class="btn btn-warning" onclick="generateNewKey()">
                            <i class="fas fa-refresh"></i>
                            Generate New Key
                        </button>
                        <button type="button" class="btn btn-info" onclick="checkKeyStatus()">
                            <i class="fas fa-sync"></i>
                            Refresh Status
                        </button>
                        <button type="button" class="btn btn-secondary" onclick="extendKey()">
                            <i class="fas fa-clock"></i>
                            Extend Expiry
                        </button>
                    </div>

                    <!-- API Usage Instructions -->
                    <div class="card mt-4">
                        <div class="card-header">
                            <h6 class="mb-0">
                                <i class="fas fa-code"></i>
                                API Usage
                            </h6>
                        </div>
                        <div class="card-body">
                            <p>Use your key to access the API endpoints:</p>
                            <div class="code-block">
                                <pre><code>GET /api/validate?key=<%= key.keyValue %></code></pre>
                            </div>
                            <small class="text-muted">
                                Include your key in API requests to access protected endpoints.
                            </small>
                        </div>
                    </div>

                <% } else { %>
                    <!-- No Key Available -->
                    <div class="alert alert-warning" role="alert">
                        <i class="fas fa-exclamation-triangle"></i>
                        <strong>No active key found.</strong>
                        Complete all checkpoints to generate an access key.
                    </div>

                    <div class="text-center">
                        <a href="/checkpoint/1" class="btn btn-primary btn-lg">
                            <i class="fas fa-arrow-left"></i>
                            Start Checkpoint Process
                        </a>
                    </div>
                <% } %>
            </div>
        </div>
    </div>
</div>

<!-- Success Toast -->
<div class="toast-container position-fixed bottom-0 end-0 p-3">
    <div id="successToast" class="toast" role="alert">
        <div class="toast-header bg-success text-white">
            <i class="fas fa-check-circle me-2"></i>
            <strong class="me-auto">Success</strong>
            <button type="button" class="btn-close btn-close-white" data-bs-dismiss="toast"></button>
        </div>
        <div class="toast-body" id="toastMessage">
            Action completed successfully!
        </div>
    </div>
</div>

<script>
// Copy key to clipboard
function copyToClipboard() {
    const keyInput = document.getElementById('accessKey');
    keyInput.select();
    keyInput.setSelectionRange(0, 99999);
    document.execCommand('copy');
    
    showToast('Key copied to clipboard!');
}

// Generate new key
function generateNewKey() {
    if (confirm('Are you sure you want to generate a new key? This will revoke your current key.')) {
        fetch('/access/generate', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            }
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                location.reload();
            } else {
                alert('Failed to generate new key: ' + data.error);
            }
        })
        .catch(error => {
            console.error('Error:', error);
            alert('Network error occurred');
        });
    }
}

// Check key status
function checkKeyStatus() {
    fetch('/access/status')
        .then(response => response.json())
        .then(data => {
            if (data.hasKey) {
                document.getElementById('timeRemaining').textContent = data.timeRemaining;
                showToast('Status updated!');
            } else {
                alert('Key has expired or is no longer valid');
                location.reload();
            }
        })
        .catch(error => {
            console.error('Error:', error);
            alert('Failed to check status');
        });
}

// Extend key expiry
function extendKey() {
    const hours = prompt('Enter additional hours to extend (default: 24):', '24');
    if (hours && parseInt(hours) > 0) {
        fetch('/access/extend', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ hours: parseInt(hours) })
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                showToast(data.message);
                setTimeout(() => location.reload(), 1500);
            } else {
                alert('Failed to extend key: ' + data.error);
            }
        })
        .catch(error => {
            console.error('Error:', error);
            alert('Network error occurred');
        });
    }
}

// Show toast notification
function showToast(message) {
    document.getElementById('toastMessage').textContent = message;
    const toast = new bootstrap.Toast(document.getElementById('successToast'));
    toast.show();
}

// Auto-update time remaining every minute
<% if (hasKey && key) { %>
setInterval(function() {
    checkKeyStatus();
}, 60000);
<% } %>
</script>