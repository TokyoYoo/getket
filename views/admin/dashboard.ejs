<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin Dashboard - GetKey System</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
            min-height: 100vh;
            color: #333;
        }

        .navbar {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            padding: 15px 0;
            box-shadow: 0 2px 20px rgba(0, 0, 0, 0.1);
        }

        .navbar-content {
            max-width: 1200px;
            margin: 0 auto;
            padding: 0 20px;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .navbar-brand {
            color: white;
            font-size: 24px;
            font-weight: bold;
            text-decoration: none;
        }

        .navbar-nav {
            display: flex;
            gap: 20px;
            align-items: center;
        }

        .navbar-nav a {
            color: white;
            text-decoration: none;
            padding: 8px 16px;
            border-radius: 8px;
            transition: all 0.3s ease;
            font-weight: 500;
        }

        .navbar-nav a:hover {
            background: rgba(255, 255, 255, 0.2);
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 30px 20px;
        }

        .page-header {
            margin-bottom: 30px;
        }

        .page-header h1 {
            font-size: 32px;
            font-weight: 700;
            color: #333;
            margin-bottom: 10px;
        }

        .page-header p {
            color: #666;
            font-size: 16px;
        }

        .stats-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 20px;
            margin-bottom: 40px;
        }

        .stat-card {
            background: white;
            padding: 25px;
            border-radius: 15px;
            box-shadow: 0 5px 20px rgba(0, 0, 0, 0.08);
            border: 1px solid rgba(255, 255, 255, 0.3);
            transition: all 0.3s ease;
        }

        .stat-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.15);
        }

        .stat-card-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
        }

        .stat-card-title {
            font-size: 14px;
            font-weight: 600;
            color: #666;
            text-transform: uppercase;
            letter-spacing: 1px;
        }

        .stat-card-icon {
            width: 40px;
            height: 40px;
            border-radius: 10px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 20px;
            color: white;
        }

        .stat-card-value {
            font-size: 36px;
            font-weight: 700;
            color: #333;
            margin-bottom: 5px;
        }

        .stat-card-change {
            font-size: 12px;
            font-weight: 500;
        }

        .stat-card-change.positive {
            color: #10b981;
        }

        .stat-card-change.negative {
            color: #ef4444;
        }

        .icon-blue { background: linear-gradient(135deg, #3b82f6, #1d4ed8); }
        .icon-green { background: linear-gradient(135deg, #10b981, #059669); }
        .icon-purple { background: linear-gradient(135deg, #8b5cf6, #7c3aed); }
        .icon-orange { background: linear-gradient(135deg, #f59e0b, #d97706); }
        .icon-red { background: linear-gradient(135deg, #ef4444, #dc2626); }

        .content-grid {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 30px;
            margin-bottom: 30px;
        }

        .card {
            background: white;
            border-radius: 15px;
            box-shadow: 0 5px 20px rgba(0, 0, 0, 0.08);
            overflow: hidden;
            border: 1px solid rgba(255, 255, 255, 0.3);
        }

        .card-header {
            padding: 20px 25px;
            border-bottom: 1px solid #f1f5f9;
            background: linear-gradient(135deg, #f8fafc, #f1f5f9);
        }

        .card-title {
            font-size: 18px;
            font-weight: 700;
            color: #333;
            margin-bottom: 5px;
        }

        .card-subtitle {
            font-size: 14px;
            color: #666;
        }

        .card-body {
            padding: 25px;
        }

        .recent-keys-table {
            width: 100%;
            border-collapse: collapse;
        }

        .recent-keys-table th,
        .recent-keys-table td {
            padding: 12px;
            text-align: left;
            border-bottom: 1px solid #f1f5f9;
        }

        .recent-keys-table th {
            background: #f8fafc;
            font-weight: 600;
            color: #475569;
            font-size: 12px;
            text-transform: uppercase;
            letter-spacing: 1px;
        }

        .recent-keys-table td {
            font-size: 14px;
            color: #64748b;
        }

        .status-badge {
            padding: 4px 8px;
            border-radius: 6px;
            font-size: 11px;
            font-weight: 600;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

        .status-active {
            background: #dcfce7;
            color: #16a34a;
        }

        .status-expired {
            background: #fef2f2;
            color: #dc2626;
        }

        .status-completed {
            background: #dbeafe;
            color: #2563eb;
        }

        .actions-section {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 15px;
        }

        .action-button {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            padding: 12px 20px;
            border: none;
            border-radius: 10px;
            font-size: 14px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            text-decoration: none;
            display: inline-block;
            text-align: center;
        }

        .action-button:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(102, 126, 234, 0.3);
        }

        .action-button.secondary {
            background: linear-gradient(135deg, #6b7280, #4b5563);
        }

        .action-button.danger {
            background: linear-gradient(135deg, #ef4444, #dc2626);
        }

        .empty-state {
            text-align: center;
            padding: 40px 20px;
            color: #64748b;
        }

        .empty-state-icon {
            font-size: 48px;
            margin-bottom: 16px;
            opacity: 0.5;
        }

        @media (max-width: 768px) {
            .content-grid {
                grid-template-columns: 1fr;
            }
            
            .stats-grid {
                grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            }
            
            .navbar-content {
                flex-direction: column;
                gap: 15px;
            }
            
            .navbar-nav {
                flex-wrap: wrap;
                justify-content: center;
            }
            
            .actions-section {
                grid-template-columns: 1fr;
            }
        }
    </style>
</head>
<body>
    <nav class="navbar">
        <div class="navbar-content">
            <a href="/admin/dashboard" class="navbar-brand">🔑 GetKey Admin</a>
            <div class="navbar-nav">
                <a href="/admin/dashboard">Dashboard</a>
                <a href="/admin/keys">Manage Keys</a>
                <a href="/admin/settings">Settings</a>
                <a href="/admin/logout">Logout</a>
            </div>
        </div>
    </nav>

    <div class="container">
        <div class="page-header">
            <h1>Dashboard</h1>
            <p>Overview of your GetKey system performance and statistics</p>
        </div>

        <div class="stats-grid">
            <div class="stat-card">
                <div class="stat-card-header">
                    <div class="stat-card-title">Total Keys</div>
                    <div class="stat-card-icon icon-blue">📊</div>
                </div>
                <div class="stat-card-value"><%= typeof stats !== 'undefined' ? stats.totalKeys : 0 %></div>
                <div class="stat-card-change positive">+<%= typeof stats !== 'undefined' ? stats.todayKeys : 0 %> today</div>
            </div>

            <div class="stat-card">
                <div class="stat-card-header">
                    <div class="stat-card-title">Active Keys</div>
                    <div class="stat-card-icon icon-green">✅</div>
                </div>
                <div class="stat-card-value"><%= typeof stats !== 'undefined' ? stats.activeKeys : 0 %></div>
                <div class="stat-card-change positive">Valid & Unexpired</div>
            </div>

            <div class="stat-card">
                <div class="stat-card-header">
                    <div class="stat-card-title">Completed</div>
                    <div class="stat-card-icon icon-purple">🎯</div>
                </div>
                <div class="stat-card-value"><%= typeof stats !== 'undefined' ? stats.completedKeys : 0 %></div>
                <div class="stat-card-change positive">All checkpoints done</div>
            </div>

            <div class="stat-card">
                <div class="stat-card-header">
                    <div class="stat-card-title">Expired Keys</div>
                    <div class="stat-card-icon icon-red">⏰</div>
                </div>
                <div class="stat-card-value"><%= typeof stats !== 'undefined' ? stats.expiredKeys : 0 %></div>
                <div class="stat-card-change">Need cleanup</div>
            </div>
        </div>

        <div class="content-grid">
            <div class="card">
                <div class="card-header">
                    <div class="card-title">Recent Keys</div>
                    <div class="card-subtitle">Latest key activities</div>
                </div>
                <div class="card-body">
                    <% if (typeof recentKeys !== 'undefined' && recentKeys.length > 0) { %>
                        <table class="recent-keys-table">
                            <thead>
                                <tr>
                                    <th>Key ID</th>
                                    <th>IP Address</th>
                                    <th>Status</th>
                                    <th>Created</th>
                                </tr>
                            </thead>
                            <tbody>
                                <% recentKeys.forEach(key => { %>
                                    <tr>
                                        <td><%= key.keyId.substring(0, 8) %>...</td>
                                        <td><%= key.ip %></td>
                                        <td>
                                            <% if (key.step === 4) { %>
                                                <span class="status-badge status-completed">Completed</span>
                                            <% } else if (new Date(key.expiresAt) > new Date()) { %>
                                                <span class="status-badge status-active">Active</span>
                                            <% } else { %>
                                                <span class="status-badge status-expired">Expired</span>
                                            <% } %>
                                        </td>
                                        <td><%= new Date(key.createdAt).toLocaleDateString() %></td>
                                    </tr>
                                <% }); %>
                            </tbody>
                        </table>
                    <% } else { %>
                        <div class="empty-state">
                            <div class="empty-state-icon">🔑</div>
                            <p>No keys generated yet</p>
                        </div>
                    <% } %>
                </div>
            </div>

            <div class="card">
                <div class="card-header">
                    <div class="card-title">Quick Actions</div>
                    <div class="card-subtitle">System management tools</div>
                </div>
                <div class="card-body">
                    <div class="actions-section">
                        <a href="/admin/keys" class="action-button">Manage Keys</a>
                        <a href="/admin/settings" class="action-button secondary">System Settings</a>
                        <button onclick="cleanupExpiredKeys()" class="action-button danger">Cleanup Expired</button>
                        <button onclick="testWebhook()" class="action-button">Test Webhook</button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script>
        async function cleanupExpiredKeys() {
            if (!confirm('Are you sure you want to delete all expired keys?')) {
                return;
            }

            try {
                const response = await fetch('/admin/cleanup', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    }
                });

                const result = await response.json();
                
                if (result.success) {
                    alert(result.message);
                    location.reload();
                } else {
                    alert('Error: ' + result.message);
                }
            } catch (error) {
                alert('Failed to cleanup expired keys');
                console.error('Cleanup error:', error);
            }
        }

        async function testWebhook() {
            try {
                const response = await fetch('/admin/test-webhook', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    }
                });

                const result = await response.json();
                
                if (result.success) {
                    alert('✅ ' + result.message);
                } else {
                    alert('❌ ' + result.message);
                }
            } catch (error) {
                alert('Failed to test webhook');
                console.error('Webhook test error:', error);
            }
        }

        // Auto refresh every 30 seconds
        setInterval(() => {
            location.reload();
        }, 30000);
    </script>
</body>
</html>